export class Coating{constructor(a={}){this.solids=.2,this.viscosityIntercept=20,this.viscosityExponent=10,this.density=11e5,this.productName="",this.formulaName="",this.type="",this.color="",this.firebaseKey="",Object.getOwnPropertyNames(this).map(b=>{a[b]&&(this[b]=a[b])})}get viscosity(){return this.viscosityIntercept*Math.exp(this.viscosityExponent*this.solids)}set viscosity(a){this.solids=Math.log(this.viscosity/this.viscosityIntercept)/this.viscosityExponent}get weightGainPercent(){return(100*this.weightGain).toFixed(2)}get solidsInPercent(){return(100*this.solids).toFixed(1)}get densityInGML(){return(1e-6*this.density).toFixed(2)}get viscosityRounded(){return this.viscosity.toFixed(0)}get coatingWeight(){return this.tabletWeight*this.weightGain}set coatingWeight(a){this.weightGain=a/this.tabletWeight}get filmThickness(){return this.coatingCoverage/this.density}set filmThickness(a){this.coatingCoverage=a*this.density}get coatingCoverage(){return this.coatingWeight/this.tabletArea}set coatingCoverage(a){this.coatingWeight=a*this.tabletArea}toJSON(){return Object.assign({},this,{viscosity:this.viscosity,weightGainPercent:this.weightGainPercent,solidsInPercent:this.solidsInPercent,densityInGML:this.densityInGML,viscosityRounded:this.viscosityRounded,coatingWeight:this.coatingWeight,filmThickness:this.filmThickness,coatingCoverage:this.coatingCoverage})}}