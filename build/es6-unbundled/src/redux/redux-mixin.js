import PolymerRedux from"../../node_modules/polymer-redux/polymer-redux.js";import{Tablet}from"./tablet.js";import{Pan}from"./pan.js";import{Batch}from"./batch.js";import{CoatingAmount}from"./coating-amount.js";import{Coating}from"./coating.js";import{Parameters}from"./parameters.js";function tabletReducer(a={},b){let c=new Tablet(a);switch(b.type){case"SET_TABLET_PRODUCT_NAME":c.productName=b.value;break;case"SET_TABLET_FORMULATION_NAME":c.formulationName=b.value;break;case"SET_TABLET_CONTACT_NAME":c.contactName=b.value;break;case"SET_TABLET_COMPANY_NAME":c.companyName=b.value;break;case"SET_TABLET_PRODUCT_TYPE":c.productType=b.value;break;case"SET_TABLET_SHAPE":c.shape=b.value;break;case"SET_TABLET_WIDTH":c.width=b.value;break;case"SET_TABLET_LENGTH":c.length=b.value;break;case"SET_TABLET_TOTAL_THICKNESS":c.totalThickness=b.value;break;case"SET_TABLET_BAND_THICKNESS":c.bandThickness=b.value;break;case"SET_TABLET_WEIGHT":c.weight=b.value;break;case"SET_TABLET_BULK_DENSITY":c.bulkDensity=b.value;break;case"LOAD_TABLET_FROM_LIBRARY":c=new Tablet(b.value);}return Object.assign({},a,c.toJSON())}function panReducer(a={},b){let c=new Pan(a);switch(b.type){case"SET_PAN_NICKNAME":c.nickname=b.value;break;case"SET_PAN_MANUFACTURER":c.manufacturer=b.value;break;case"SET_PAN_MODEL":c.model=b.value;break;case"SET_PAN_COMPANY":c.company=b.value;break;case"SET_PAN_LOCATION_NAME":c.locationName=b.value;break;case"SET_PAN_DIAMETER":c.panDiameter=b.value;break;case"SET_PAN_OPENING_DIAMETER":c.openingDiameter=b.value;break;case"SET_PAN_BRIM_WIDTH":c.brimWidth=b.value;break;case"SET_PAN_WALL_WIDTH":c.wallWidth=b.value;break;case"SET_PAN_PERFORATIONS":c.perforations=b.value;break;case"SET_PAN_MAX_AIRFLOW":c.maxAirflow=b.value;break;case"SET_PAN_GUN_MAKE":c.gunMake=b.value;break;case"SET_PAN_GUN_MODEL":c.gunModel=b.value;break;case"SET_PAN_GUN_COUNT":c.gunCount=b.value;break;case"SET_PAN_GUN_TO_GUN_DISTANCE":c.gunToGunDistance=b.value;break;case"SET_PAN_BAFFLE_TYPE":c.baffleType=b.value;break;case"SET_PAN_BAFFLE_COUNT":c.baffleCount=b.value;break;case"SET_PAN_BAFFLE_HEIGHT":c.baffleHeight=b.value;break;case"LOAD_PAN_FROM_LIBRARY":c=new Pan(b.value);}return Object.assign({},a,c.toJSON())}function coatingReducer(a={},b){let c=new Coating(a);switch(b.type){case"SET_COATING_PRODUCT_NAME":c.productName=b.value;break;case"SET_COATING_FORMULA_NAME":c.formulaName=b.value;break;case"SET_COATING_COLOR":c.color=b.value;break;case"SET_COATING_TYPE":c.type=b.value;break;case"SET_COATING_DENSITY":c.density=b.value;break;case"SET_COATING_VISCOSITY_INTERCEPT":c.viscosityIntercept=b.value;break;case"SET_COATING_VISCOSITY_EXPONENT":c.viscosityExponent=b.value;break;case"SET_COATING_SOLIDS":c.solids=b.value;break;case"LOAD_COATING_FROM_LIBRARY":c=new Coating(b.value);}return Object.assign({},a,c.toJSON())}function batchReducer(a={},b,c,d){let e=new Batch(Object.assign({},a,c));switch(e.bulkDensity=d.bulkDensity,e.tabletWeight=d.weight,b.type){case"SET_BATCH_WEIGHT":e.batchWeight=b.value;break;case"SET_BATCH_VOLUME":e.batchVolume=b.value;break;case"SET_BATCH_COUNT":e.tabletCount=b.value;break;case"SET_BATCH_TO_MAX_WEIGHT":e.batchWeight=e.maxFillWeight;break;case"SET_BATCH_TO_MIN_WEIGHT":e.batchWeight=e.minFillWeight;break;case"SET_BATCH_PERCENT_VOLUME":e.batchVolume=b.value*e.brimVolume;}return Object.assign({},a,e.toJSON())}function coatingAmountReducer(a={},b,c,d){let e=new CoatingAmount(a);switch(e.tabletArea=d.totalArea,e.tabletWeight=d.weight,e.filmDensity=c.density,b.type){case"SET_TABLET_WEIGHT":e.tabletWeight=b.value;break;case"SET_COATING_DENSITY":e.filmDensity=b.value;break;case"SET_COATING_WEIGHT":e.coatingWeight=b.value;break;case"SET_COATING_WEIGHT_GAIN":e.weightGain=b.value;break;case"SET_COATING_COVERAGE":e.coatingCoverage=b.value;break;case"SET_FILM_THICKNESS":e.filmThickness=b.value;}return Object.assign({},a,e.toJSON())}function parametersReducer(a={},b,c){let d=new Parameters(a);switch(d.panDiameter=c.panDiameter,b.type){case"SET_PAN_SPEED":d.panSpeedRPM=b.value;break;case"SET_LINEAR_VELOCITY":d.linearVelocity=b.value;break;case"SET_MAX_PAN_SPEED":d.linearVelocity=80/3.28084;break;case"SET_MIN_PAN_SPEED":d.linearVelocity=70/3.28084;break;case"SET_PATTERN_AIR":d.patternAir=b.value;break;case"SET_ATOMIZATION_AIR":d.atomizationAir=b.value;break;case"SET_GUN_TO_BED":d.gunToBed=b.value;break;case"SET_SPRAY_PATTERN_WIDTH":d.sprayPatternWidth=b.value;}return Object.assign({},a,d.toJSON())}function appReducer(a={},b){switch(b.type){case"SET_ADMIN":return Object.assign({},a,{isAdmin:b.value});default:return a;}}function rootReducer(a={},b){const c=appReducer(a.app,b),d=tabletReducer(a.tablet,b),e=panReducer(a.pan,b),f=coatingReducer(a.coating,b),g=batchReducer(a.batch,b,e,d),h=coatingAmountReducer(a.coatingAmount,b,f,d),i=parametersReducer(a.parameters,b,e);let j=Object.assign({},a,{app:c,tablet:d,pan:e,coating:f,batch:g,coatingAmount:h,parameters:i});return sessionStorage.setItem("coating-toolbox-state",JSON.stringify(j)),j}const app={isAdmin:!1},storedState=JSON.parse(sessionStorage.getItem("coating-toolbox-state"))||{},tablet=storedState.tablet||new Tablet({shape:"round",length:.01,width:.0075,totalThickness:.00475,bandThickness:.00275,weight:.4,bulkDensity:76e4,productType:"Pharmaceutical",productName:"Colorcon Round Placebo",formulationName:"Placebo WP2",companyName:"Colorcon",contactName:"Jason Hansell"}),pan=storedState.pan||new Pan({panDiameter:1.2192,openingDiameter:.4826,wallWidth:.508,brimWidth:.93345,model:"Fastcoat",manufacturer:"O'Hara",nickname:"O'Hara Fastcoat 48\" Room",company:"Colorcon",locationName:"Harlyesville, PA",baffleType:"Ploughshare",baffleCount:"4",baffleHeight:"",gunMake:"Schlick",gunModel:"930",gunCount:"3",gunToGunDistance:"0.1524",maxAirflow:"2000",perforations:"Fully",firebaseKey:""}),coating=storedState.coating||new Coating({productName:"Opadry II 85F Series",formulaName:"85F18422",type:"Immediate",color:"White",solids:.2,viscosityIntercept:20,viscosityExponent:10,density:11e5,weightGain:.03,tabletWeight:.4,batchWeight:12e4,tabletArea:.01}),batch=storedState.batch||new Batch(pan),coatingAmount=storedState.coatingAmount||new CoatingAmount,parameters=storedState.parameters||new Parameters,initialState={app,tablet,pan,coating,batch,coatingAmount,parameters},store=Redux.createStore(rootReducer,initialState),ReduxMixin=PolymerRedux(store);export{ReduxMixin};