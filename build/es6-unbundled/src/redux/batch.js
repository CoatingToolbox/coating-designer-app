import{Pan}from"./pan.js";export class Batch extends Pan{constructor(a={}){super(),this.batchWeight=12e4,this.bulkDensity=76e4,this.tabletWeight=.4,Object.getOwnPropertyNames(this).map(b=>{a[b]&&(this[b]=a[b])})}get batchVolume(){return this.batchWeight/this.bulkDensity}set batchVolume(a){this.batchWeight=a*this.bulkDensity}get tabletCount(){return Math.ceil(this.batchWeight/this.tabletWeight)}set tabletCount(a){this.batchWeight=a*this.tabletWeight}get brimWeight(){return this.calcWeight(this.brimVolume,this.bulkDensity)}get maxFillWeight(){return this.calcWeight(this.maxFillVolume,this.bulkDensity)}get minFillWeight(){return this.calcWeight(this.minFillVolume,this.bulkDensity)}get batchFillHeight(){let a=0,b=this.brimHeight/750;for(let c=0;c<=this.brimHeight;c+=b){a=this.brimHeight-c;let b=this.calcVolume(a);if(b<=this.batchVolume)break}return a}get batchFillLength(){return this.calcChordLength(this.batchFillHeight)}get batchFillVolumePercent(){return this.batchVolume/this.brimVolume}get panRangeWeightVsFillHeight(){let a=[],b=this.brimHeight/50;for(var c=0;c<=this.brimHeight;c+=b){let b=c,d=this.calcVolume(b),e=this.calcWeight(d,this.bulkDensity);a.push({weight:this.gramsToKilograms(e),height:this.metersToInches(b)})}return a}get workingFillWeightVsFillHeight(){let a=[],b=(this.maxFillHeight-this.minFillHeight)/50;for(var c=this.minFillHeight;c<=this.maxFillHeight;c+=b){let b=c,d=this.calcVolume(b),e=this.calcWeight(d,this.bulkDensity);a.push({weight:this.gramsToKilograms(e),height:this.metersToInches(b)})}return a}get batchWeightVsHeight(){let a=[{weight:this.gramsToKilograms(this.batchWeight),height:this.metersToInches(this.batchFillHeight),label:"Batch Size"}];return a}get referencePointsWeightVsHeight(){let a=[{weight:this.gramsToKilograms(this.minFillWeight),height:this.metersToInches(this.minFillHeight),label:"Min Recommended"},{weight:this.gramsToKilograms(this.maxFillWeight),height:this.metersToInches(this.maxFillHeight),label:"Max Recommended"},{weight:this.gramsToKilograms(this.brimWeight),height:this.metersToInches(this.brimHeight),label:"Brim Height"}];if(0<this.baffleHeight){let b=this.calcVolume(this.baffleHeight),c=this.calcWeight(b,this.bulkDensity);a.push({weight:this.gramsToKilograms(c),height:this.metersToInches(this.baffleHeight),label:"Baffle Height"})}return a}gramsToKilograms(a){return a/1e3}calcWeight(a,b){return a*b}toJSON(){return Object.assign({},this,{batchWeight:this.batchWeight,bulkDensity:this.bulkDensity,tabletWeight:this.tabletWeight,brimWeight:this.brimWeight,maxFillWeight:this.maxFillWeight,minFillWeight:this.minFillWeight,batchFillHeight:this.batchFillHeight,batchFillLength:this.batchFillLength,batchFillVolumePercent:this.batchFillVolumePercent,batchVolume:this.batchVolume,tabletCount:this.tabletCount,charts:{panRangeWeightVsFillHeight:this.panRangeWeightVsFillHeight,workingFillWeightVsFillHeight:this.workingFillWeightVsFillHeight,batchWeightVsHeight:this.batchWeightVsHeight,referencePointsWeightVsHeight:this.referencePointsWeightVsHeight},formatted:{batchWeight:`${(this.batchWeight/1e3).toFixed(1)} kg`}})}}